snippet head
#!/usr/bin/env python
# -*- coding: utf-8 -*-

${1}
endsnippet

snippet code
# -*- coding: utf-8 -*-
endsnippet

snippet im
import ${1}
endsnippet

snippet fim
from ${1} import ${2}
endsnippet

snippet from
from ${1} import ${2}
endsnippet

#字符串注释
snippet /
# ${1}
endsnippet

snippet #
# ${1}
endsnippet

snippet //
""" ${1} """
endsnippet

snippet main
if __name__ == '__main__':
    ${1}
endsnippet

snippet _
__${1:init}__${2}
endsnippet

snippet if
if ${1}:
    ${2}
endsnippet

snippet ife
if ${1:expression}:
    ${2:# TODO}
else:
    ${0:# TODO}
endsnippet

snippet ifee
if ${1:expression}:
    ${2:# TODO}
elif ${3:expression}:
    ${4:# TODO}
else:
    ${0:# TODO}
endsnippet

snippet el
else:
    ${0:# TODO}
endsnippet

snippet ei
elif ${1}:
    ${2}
endsnippet

snippet for
for ${1:i} in ${2:sequence}:
    ${0:# TODO}
endsnippet

snippet while
while ${1:expression}:
    ${0:# TODO}
endsnippet

snippet def
def ${1:function_name}(${2}):
    """${3docstirng for $1}"""
    ${3:# TODO: write code...}
endsnippet

snippet defs
def ${1:function_name}(self, ${2}):
    """${3docstirng for $1}"""
    ${3:# TODO: write code...}
endsnippet

snippet cla
class ${1:clsname}(${2:object}):
    """${3:docstring for $1}"""
    def __init__(self${4}):
        ${5}
endsnippet

#异常处理
snippet try
try:
    ${1}
except ${2}:
    ${3}
endsnippet


snippet rai
raise ${1}
endsnippet

snippet as
assert ${1}
endsnippet

snippet dowh
while True:
    ${1: # TODO: write code...}
    if ${2:condition}:
        break
endsnippet

#单个关键字
snippet t
True${1}
endsnippet

snippet f
False${1}
endsnippet

snippet n
None${1}
endsnippet

snippet r
return ${1}
endsnippet

snippet s
self.${1}
endsnippet

snippet p
print ${1}
endsnippet

snippet pr
print "${1}"
endsnippet

snippet pri
print '${1}'
endsnippet

snippet property
def ${1}():
    doc = "${2: The $1 property.}"
    def fget(self):
        ${3:return self._$1}
    def fset(self, value):
        ${4:self._$1 = value}
    def fdel(self):
        ${5:del self._$1}
    return locals()
$1 = property(**$1())
endsnippet

snippet ld
${1:var} = lambda ${2}: ${3}
endsnippet

snippet _
__${1:init}__${2}
endsnippet

snippet pdb
import pdb; pdb.set_trace()
endsnippet

# ------- docs -----------
snippet doc
"""
@Author: ${1:`wklken`}
@Email: ${2:`wklken@yeah.net`}
@Date: ${3}
@Desc: ${4}
"""
endsnippet
